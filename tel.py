import os
import asyncio
from aiohttp import web
from aiogram.filters import Command
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton


TOKEN = os.getenv("BOT_TOKEN")
bot = Bot(token=TOKEN)
dp = Dispatcher(bot=bot)


def get_main_menu():
    buttons = [
        [KeyboardButton(text="üé® –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"),KeyboardButton(text="üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞")],
        [KeyboardButton(text="üõ† –ü–æ–ª–µ–∑–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã"),KeyboardButton(text="–ú–µ–Ω—é")]
    ]
    markup = ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)
    return markup


def get_neural_network_menu():
    main = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="DALL-E"), KeyboardButton(text="ChatGPT")],
            [KeyboardButton(text="Notion AI"), KeyboardButton(text="10WEB")],
            [KeyboardButton(text="RYTR"), KeyboardButton(text="SITEGPT")],
            [KeyboardButton(text="HEY GEN")], [(KeyboardButton(text="–ù–∞–∑–∞–¥ üîô"))]
        ],
        input_field_placeholder='–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é...',
        resize_keyboard=True
    )
    return main


@dp.message(Command("start"))
async def send_welcome(message: Message):
    welcome_text = (
        "üåü *–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Å –∫—Ä—É—Ç—ã–º–∏ –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏!* üåü\n\n"
        "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –ø–æ–ª–µ–∑–Ω—ã–µ –∏ –ø—Ä–∏–∫–æ–ª—å–Ω—ã–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –¥–ª—è –∂–∏–∑–Ω–∏! üöÄ\n"
        "–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å:\n"
        "üîπ /list ‚Äî –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π\n"
        "üîπ /help ‚Äî –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é\n"
        "üîπ /help ‚Äî –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"
    )
    await message.answer(welcome_text, parse_mode="Markdown", reply_markup=get_main_menu())

@dp.message(Command("menu"))
async def send_welcome(message:types.Message):
    welcome_text = (
        "üåü *–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Å –∫—Ä—É—Ç—ã–º–∏ –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏!* üåü\n\n"
        "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –ø–æ–ª–µ–∑–Ω—ã–µ –∏ –ø—Ä–∏–∫–æ–ª—å–Ω—ã–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –¥–ª—è –∂–∏–∑–Ω–∏! üöÄ\n"
        "–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å:\n"
        "üîπ /list ‚Äî –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π\n"
        "üîπ /help ‚Äî –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é\n"
        "üîπ /menu ‚Äî –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    )
    await message.answer(welcome_text, parse_mode="Markdown", reply_markup=get_main_menu())


@dp.message(F.text == "–ú–µ–Ω—é")
async def menus(message: types.Message):
    welcome_text = (
        "üåü *–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Å –∫—Ä—É—Ç—ã–º–∏ –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º–∏!* üåü\n\n"
        "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –ø–æ–ª–µ–∑–Ω—ã–µ –∏ –ø—Ä–∏–∫–æ–ª—å–Ω—ã–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –¥–ª—è –∂–∏–∑–Ω–∏! üöÄ\n"
        "–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å:\n"
        "üîπ /list ‚Äî –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π\n"
        "üîπ /menu ‚Äî –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "üîπ /help ‚Äî –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"
    )
    await message.answer(welcome_text, parse_mode="Markdown", reply_markup=get_main_menu())




@dp.message(Command("help"))
async def send_help(message: Message):
    help_text = (
        "‚ÑπÔ∏è *–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º?*\n\n"
        "1. –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π.\n"
        "2. –ò—Å–ø–æ–ª—å–∑—É–π inline-–∫–Ω–æ–ø–∫–∏, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –∏–ª–∏ —É–≤–∏–¥–µ—Ç—å –ø—Ä–∏–º–µ—Ä—ã.\n"
        "3. –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–∞–ø–∏—à–∏ –º–Ω–µ! üòä"
        "4. –ò—Å–ø–æ–ª—å–∑—É–π /menu, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."
    )
    await message.answer(help_text, parse_mode="Markdown")




@dp.message(Command("list"))
async def show_list(message: Message):


    list_text = (
        "‚ú® *–°–ø–∏—Å–æ–∫ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ —Ä–∞–±–æ—Ç—ã:* ‚ú®\n\n"
        "üñº *DALL-E (–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)*\n"
        "–ü—Ä–∏–º–µ—Ä: –Ø –º–æ–≥—É —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é: '–ö–æ—Ç –≤ –∫–æ—Å–º–æ—Å–µ' üê±üöÄ\n\n"
        "üìù *ChatGPT (–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞)*\n"
        "–ü—Ä–∏–º–µ—Ä: –Ø –º–æ–≥—É –Ω–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç: '–ù–∞–ø–∏—à–∏ –ø–∏—Å—å–º–æ –¥—Ä—É–≥—É' ‚Äî –∏ –≤–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç:\n"
        "_–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞? –î–∞–≤–Ω–æ –Ω–µ –≤–∏–¥–µ–ª–∏—Å—å!_ ‚úçÔ∏è\n\n"
        "üõ† *Notion AI (–ü–æ–ª–µ–∑–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã)*\n"
        "–ü—Ä–∏–º–µ—Ä: –Ø –º–æ–≥—É –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —Ç–≤–æ–∏ –∑–∞–º–µ—Ç–∫–∏: '–°–æ—Å—Ç–∞–≤—å –ø–ª–∞–Ω –Ω–∞ –Ω–µ–¥–µ–ª—é' ‚Äî –∏ –≤–æ—Ç –ø–ª–∞–Ω:\n"
        "_–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫: –£—á—ë–±–∞, –í—Ç–æ—Ä–Ω–∏–∫: –°–ø–æ—Ä—Ç..._ üìÖ\n\n"
        "‚ú® *10Web (–í–µ–±-—Å–∞–π—Ç—ã)*\n"
        "–ü—Ä–∏–º–µ—Ä: –Ø –º–æ–≥—É —Å–æ–∑–¥–∞—Ç—å —Ç–µ–±–µ —Å–∞–π—Ç: '–í–æ—Ç —Ç–µ–±–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –∫ —Å–∞–π—Ç—É' ‚Äî –∏ –≤–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç:\n"
        "_–ì–æ—Ç–æ–≤—ã–π –ø–æ–ª–Ω–æ–º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É—é—â–∏–π —Å–∞–π—Ç_ üåê\n\n"
        "üìù *Rytr (–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–æ–≤)*\n"
        "–ü—Ä–∏–º–µ—Ä: –Ø –º–æ–≥—É —Å–æ–∑–¥–∞—Ç—å —Ç–µ–±–µ —Ç–µ–∫—Å—Ç –ø–æ–¥ –ª—é–±–æ–π —Å—Ç–∏–ª—å: '–ù–∞–ø–∏—à–∏ –º–Ω–µ –ø–∏—Å—å–º–æ –¥–ª—è –±–∞–±—É—à–∫–∏' ‚Äî –∏ –≤–æ—Ç 40 —à–∞–±–ª–æ–Ω–æ–≤:\n"
        "_–£–¥–æ–±–Ω—ã–π –∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–µ–∫—Å—Ç –ø–æ–¥ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞_ ‚úçÔ∏è\n\n"
        "üõ† *SiteGPT (–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–æ—Ç–æ–≤ –¥–ª—è —Ç–≤–æ–µ–≥–æ —Å–∞–π—Ç–∞)*\n"
        "–ü—Ä–∏–º–µ—Ä: –Ø –º–æ–≥—É —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —á–∞—Ç-–±–æ—Ç–æ–≤, –æ–±—É—á–µ–Ω–Ω—ã—Ö –Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–µ —Ç–≤–æ–µ–≥–æ —Å–∞–π—Ç–∞: '–ù–∞–ø–∏—à–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è —Å–∞–π—Ç–∞ –∫–æ—Ñ–µ–π–Ω–∏ –≤ —Ç—ë–ø–ª–æ–º —Å—Ç–∏–ª–µ' ‚Äî –∏ –≤–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç:\n"
        "_–î–µ–ª–∞–µ—Ç –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç –≤–∞—à—É –∑–∞–¥–∞—á—É_ ü§ñ\n\n"
        "‚ú® *HeyGen (–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ)*\n"
        "–ü—Ä–∏–º–µ—Ä: –Ø –º–æ–≥—É —Å–æ–∑–¥–∞—Ç—å —Ç–µ–±–µ –≤–∏–¥–µ–æ: '–°–æ–∑–¥–∞–π –º–Ω–µ —á–µ–ª–æ–≤–µ–∫–∞, –≥–æ–≤–æ—Ä—è—â–µ–≥–æ –Ω–æ–≤–æ—Å—Ç–∏' ‚Äî –∏ –≤–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç:\n"
        "_–ì–æ—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ —Å —á–µ–ª–æ–≤–µ–∫–æ–º, –≥–æ–≤–æ—Ä—è—â–µ–º –Ω–∞ –ª—é–±–æ–º –ø–æ–ø—É–ª—è—Ä–Ω–æ–º —è–∑—ã–∫–µ_ üé•\n\n"
        "–í—ã–±–µ—Ä–∏ –Ω–µ–π—Ä–æ—Å–µ—Ç—å –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ ‚¨áÔ∏è"
    )
    await message.answer(list_text, parse_mode="Markdown", reply_markup=get_neural_network_menu())



@dp.message(F.text == "üé® –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
async def show_image_gen(message: Message):
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ MidJourney", url="https://www.midjourney.com")],
        [InlineKeyboardButton(text="–ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã", callback_data="midjourney_example")]
    ])

    await message.answer(
        "üñº *–ù–µ–π—Ä–æ—Å–µ—Ç–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:*\n\n"
        "üî∏ *DALL-E*\n"
        "   - –û–ø–∏—Å–∞–Ω–∏–µ: –°–æ–∑–¥–∞—ë—Ç –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É –æ–ø–∏—Å–∞–Ω–∏—é\n"
        "   - –ü–æ–ª–µ–∑–Ω–æ—Å—Ç—å: –î–ª—è –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã—Ö –∏–¥–µ–π –∏ –¥–∏–∑–∞–π–Ω–∞\n\n"
        "üî∏ *Stable Diffusion*\n"
        "   - –û–ø–∏—Å–∞–Ω–∏–µ: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\n"
        "   - –ü–æ–ª–µ–∑–Ω–æ—Å—Ç—å: –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–æ—Ç–æ—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã—Ö –∞—Ä—Ç–æ–≤\n\n"
        "üî∏ *MidJourney*\n"
        "   - –û–ø–∏—Å–∞–Ω–∏–µ: –°–æ–∑–¥–∞—ë—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –∞—Ä—Ç—ã\n"
        "   - –ü–æ–ª–µ–∑–Ω–æ—Å—Ç—å: –î–ª—è –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è –∏ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞",
        parse_mode="Markdown",
        reply_markup=markup
    )



    await message.answer_photo(
        photo="https://example.com/midjourney_image.jpg",  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL
        caption="üñº –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã MidJourney: '–ö–æ—Å–º–∏—á–µ—Å–∫–∏–π –ø–µ–π–∑–∞–∂'"
    )



@dp.callback_query(F.data == "midjourney_example")
async def show_midjourney_example(callback: types.CallbackQuery):
    await callback.message.answer("üé® MidJourney –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –∞—Ä—Ç, –Ω–∞–ø—Ä–∏–º–µ—Ä: '–§—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –≥–æ—Ä–æ–¥ –≤ –Ω–µ–æ–Ω–µ'!")
    await callback.answer()



@dp.message(F.text == "üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞")
async def show_text_gen(message: Message):
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ ChatGPT", url="https://openai.com/chatgpt")],
        [InlineKeyboardButton(text="–ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã", callback_data="chatgpt_example")]
    ])

    await message.answer(
        "üìù *–ù–µ–π—Ä–æ—Å–µ—Ç–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞:*\n\n"
        "üî∏ *ChatGPT*\n"
        "   - –û–ø–∏—Å–∞–Ω–∏–µ: –û—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –ø–∏—à–µ—Ç —Ç–µ–∫—Å—Ç—ã\n"
        "   - –ü–æ–ª–µ–∑–Ω–æ—Å—Ç—å: –ü–æ–º–æ–≥–∞–µ—Ç —Å –¥–æ–º–∞—à–∫–æ–π –∏–ª–∏ –∏–¥–µ—è–º–∏\n\n"
        "üî∏ *Grok (xAI)*\n"
        "   - –û–ø–∏—Å–∞–Ω–∏–µ: –î–∞—ë—Ç —á–µ—Å—Ç–Ω—ã–µ –∏ –ø—Ä—è–º—ã–µ –æ—Ç–≤–µ—Ç—ã\n"
        "   - –ü–æ–ª–µ–∑–Ω–æ—Å—Ç—å: –î–ª—è –ø–æ–∏—Å–∫–∞ –ø—Ä–∞–≤–¥–∏–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏",
        parse_mode="Markdown",
        reply_markup=markup
    )




@dp.callback_query(F.data == "chatgpt_example")
async def show_chatgpt_example(callback: CallbackQuery):
    await callback.message.answer("üí¨ ChatGPT –º–æ–∂–µ—Ç –Ω–∞–ø–∏—Å–∞—Ç—å: '–°–æ—Å—Ç–∞–≤—å –ø–ª–∞–Ω –Ω–∞ –¥–µ–Ω—å' ‚Äî –∏ –≤—ã–¥–∞—Å—Ç –ø–æ–¥—Ä–æ–±–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–µ–ª!")
    await callback.answer()



@dp.message(F.text == "üõ† –ü–æ–ª–µ–∑–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã")
async def show_tools(message: Message):
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ Notion AI", url="https://www.notion.so/product/ai")],
        [InlineKeyboardButton(text="–ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã", callback_data="notion_example")]
    ])

    await message.answer(
        "üõ† *–ü–æ–ª–µ–∑–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:*\n\n"
        "üîπ *Notion AI*\n"
        "   - –û–ø–∏—Å–∞–Ω–∏–µ: –ü–æ–º–æ–≥–∞–µ—Ç –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –∑–∞–º–µ—Ç–∫–∏ –∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–¥–µ–∏\n"
        "   - –ü–æ–ª–µ–∑–Ω–æ—Å—Ç—å: –î–ª—è —É—á—ë–±—ã –∏ —Ä–∞–±–æ—Ç—ã\n\n"
        "üîπ *Grammarly*\n"
        "   - –û–ø–∏—Å–∞–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≥—Ä–∞–º–º–∞—Ç–∏–∫—É –∏ —Å—Ç–∏–ª—å —Ç–µ–∫—Å—Ç–∞\n"
        "   - –ü–æ–ª–µ–∑–Ω–æ—Å—Ç—å: –î–ª—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤ –±–µ–∑ –æ—à–∏–±–æ–∫",
        parse_mode="Markdown",
        reply_markup=markup
    )

@dp.message(F.text == "–ù–∞–∑–∞–¥ üîô")
async def go_back(message: Message):
    await message.answer(
        "‚ú® *–í–µ—Ä–Ω—É–ª—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!* ‚ú®\n\n"
        "–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∏–∂–µ ‚¨áÔ∏è",
        parse_mode="Markdown",
        reply_markup=get_main_menu()
    )


@dp.callback_query(F.data == "notion_example")
async def show_notion_example(callback: CallbackQuery):
    await callback.message.answer("üìã –ü—Ä–∏–º–µ—Ä: Notion AI –º–æ–∂–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω –ø—Ä–æ–µ–∫—Ç–∞!")
    await callback.answer()



@dp.message(F.text == "DALL-E")
async def show_dalle_details(message: Message):
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ DALL-E", url="https://openai.com/dall-e")]
    ])
    await message.answer(
        "üñº *DALL-E*\n\n"
        "üî∏ *–û–ø–∏—Å–∞–Ω–∏–µ:* –°–æ–∑–¥–∞—ë—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É –æ–ø–∏—Å–∞–Ω–∏—é.\n"
        "üî∏ *–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:* –ù–∞–ø–∏—à–∏ '–ö–æ—Ç –≤ —à–ª—è–ø–µ –Ω–∞ –õ—É–Ω–µ', –∏ DALL-E –Ω–∞—Ä–∏—Å—É–µ—Ç —ç—Ç–æ!\n"
        "üî∏ *–ü–æ–ª–µ–∑–Ω–æ—Å—Ç—å:* –û—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤, —Ö—É–¥–æ–∂–Ω–∏–∫–æ–≤ –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã—Ö –ª—é–¥–µ–π.",
        parse_mode="Markdown",
        reply_markup=markup
    )



@dp.message(F.text == "ChatGPT")
async def show_chatgpt_details(message: Message):
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ ChatGPT", url="https://openai.com/chatgpt")]
    ])
    await message.answer(
        "üìù *ChatGPT*\n\n"
        "üî∏ *–û–ø–∏—Å–∞–Ω–∏–µ:* –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç, –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–º–æ–≥–∞–µ—Ç —Å –∑–∞–¥–∞—á–∞–º–∏.\n"
        "üî∏ *–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:* –ú–æ–∂–µ—Ç –Ω–∞–ø–∏—Å–∞—Ç—å —ç—Å—Å–µ, –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å –∏–ª–∏ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω.\n"
        "üî∏ *–ü–æ–ª–µ–∑–Ω–æ—Å—Ç—å:* –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –ø–∏—Å–∞—Ç–µ–ª–µ–π –∏ —Ç–µ—Ö, –∫—Ç–æ –∏—â–µ—Ç –∏–¥–µ–∏.",
        parse_mode="Markdown",
        reply_markup=markup
    )



@dp.message(F.text == "Notion AI")
async def show_notion_details(message: Message):
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ Notion AI", url="https://www.notion.so/product/ai")]
    ])
    await message.answer(
        "üõ† *Notion AI*\n\n"
        "üî∏ *–û–ø–∏—Å–∞–Ω–∏–µ:* –ü–æ–º–æ–≥–∞–µ—Ç –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –∑–∞–º–µ—Ç–∫–∏, –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–¥–µ–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á–∏.\n"
        "üî∏ *–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:* –ú–æ–∂–µ—Ç —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω –ø—Ä–æ–µ–∫—Ç–∞ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ–∏ –¥–ª—è –∑–∞–º–µ—Ç–æ–∫.\n"
        "üî∏ *–ü–æ–ª–µ–∑–Ω–æ—Å—Ç—å:* –î–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –ø–æ–≤—ã—Å–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω–æ—Å—Ç—å.",
        parse_mode="Markdown",
        reply_markup=markup
    )



@dp.message(F.text == "10WEB")
async def show_10web_details(message: Message):
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ 10Web", url="https://10web.io")]
    ])
    await message.answer(
        "‚ú® *10Web*\n\n"
        "üî∏ *–û–ø–∏—Å–∞–Ω–∏–µ:* –°–æ–∑–¥–∞—ë—Ç –≤–µ–±-—Å–∞–π—Ç—ã —Å –ø–æ–º–æ—â—å—é –ò–ò –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–≤–æ–∏—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤.\n"
        "üî∏ *–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:* –î–∞–π –∑–∞–ø—Ä–æ—Å '–°–∞–π—Ç –¥–ª—è –∫–æ—Ñ–µ–π–Ω–∏ –≤ –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–æ–º —Å—Ç–∏–ª–µ', –∏ 10Web —Å–æ–∑–¥–∞—Å—Ç –≥–æ—Ç–æ–≤—ã–π —Å–∞–π—Ç.\n"
        "üî∏ *–ü–æ–ª–µ–∑–Ω–æ—Å—Ç—å:* –î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∞–π—Ç–æ–≤ –±–µ–∑ –Ω–∞–≤—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.",
        parse_mode="Markdown",
        reply_markup=markup
    )



@dp.message(F.text == "RYTR")
async def show_rytr_details(message: Message):
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ Rytr", url="https://rytr.me")]
    ])
    await message.answer(
        "üìù *Rytr*\n\n"
        "üî∏ *–û–ø–∏—Å–∞–Ω–∏–µ:* –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç—ã –≤ –ª—é–±–æ–º —Å—Ç–∏–ª–µ —Å –ø–æ–º–æ—â—å—é –ò–ò.\n"
        "üî∏ *–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:* –ü–æ–ø—Ä–æ—Å–∏ '–ù–∞–ø–∏—à–∏ –ø–∏—Å—å–º–æ –¥–ª—è –±–∞–±—É—à–∫–∏', –∏ Rytr –ø—Ä–µ–¥–ª–æ–∂–∏—Ç 40 —à–∞–±–ª–æ–Ω–æ–≤.\n"
        "üî∏ *–ü–æ–ª–µ–∑–Ω–æ—Å—Ç—å:* –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤, –æ—Ç –ø–∏—Å–µ–º –¥–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤.",
        parse_mode="Markdown",
        reply_markup=markup
    )



@dp.message(F.text == "SITEGPT")
async def show_sitegpt_details(message: Message):
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ SiteGPT", url="https://sitegpt.ai")]
    ])
    await message.answer(
        "üõ† *SiteGPT*\n\n"
        "üî∏ *–û–ø–∏—Å–∞–Ω–∏–µ:* –°–æ–∑–¥–∞—ë—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —á–∞—Ç-–±–æ—Ç–æ–≤, –æ–±—É—á–µ–Ω–Ω—ã—Ö –Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–µ —Ç–≤–æ–µ–≥–æ —Å–∞–π—Ç–∞.\n"
        "üî∏ *–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:* –ü–æ–ø—Ä–æ—Å–∏ '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è —Å–∞–π—Ç–∞ –∫–æ—Ñ–µ–π–Ω–∏ –≤ —Ç—ë–ø–ª–æ–º —Å—Ç–∏–ª–µ', –∏ SiteGPT —Å–æ–∑–¥–∞—Å—Ç –±–æ—Ç–∞.\n"
        "üî∏ *–ü–æ–ª–µ–∑–Ω–æ—Å—Ç—å:* –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ —É–ª—É—á—à–µ–Ω–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏.",
        parse_mode="Markdown",
        reply_markup=markup
    )



@dp.message(F.text == "HEY GEN")
async def show_heygen_details(message: Message):
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ HeyGen", url="https://www.heygen.com")]
    ])
    await message.answer(
        "‚ú® *HeyGen*\n\n"
        "üî∏ *–û–ø–∏—Å–∞–Ω–∏–µ:* –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≤–∏–¥–µ–æ —Å –ø–æ–º–æ—â—å—é –ò–ò, –≤–∫–ª—é—á–∞—è –≥–æ–≤–æ—Ä—è—â–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π.\n"
        "üî∏ *–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:* –ü–æ–ø—Ä–æ—Å–∏ '–°–æ–∑–¥–∞–π —á–µ–ª–æ–≤–µ–∫–∞, –≥–æ–≤–æ—Ä—è—â–µ–≥–æ –Ω–æ–≤–æ—Å—Ç–∏', –∏ HeyGen —Å–æ–∑–¥–∞—Å—Ç –≤–∏–¥–µ–æ.\n"
        "üî∏ *–ü–æ–ª–µ–∑–Ω–æ—Å—Ç—å:* –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏–¥–µ–æ–∫–æ–Ω—Ç–µ–Ω—Ç–∞, –æ—Ç —Ä–µ–∫–ª–∞–º—ã –¥–æ –Ω–æ–≤–æ—Å—Ç–µ–π, –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–∞—Ö.",
        parse_mode="Markdown",
        reply_markup=markup
    )



async def health_check(request):
    return web.Response(text="Bot is running")

app = web.Application()
app.router.add_get("/", health_check)

async def start_webserver():
    runner = web.AppRunner(app)
    await runner.setup()
    port = int(os.getenv("PORT", 10000))
    site = web.TCPSite(runner, "0.0.0.0", port)
    await site.start()

async def main():
    await start_webserver()
    try:
        await dp.start_polling(bot)
    except KeyboardInterrupt:
        print("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
    finally:
        await bot.session.close()

if __name__ == "__main__":
    asyncio.run(main())